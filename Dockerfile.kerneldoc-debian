# Examples of build options:
# o default (with Noto CJK fonts)
#  Debian bullseye based, with Inkscape only
# o --build-arg rel=buster --build-arg ink=0 --build-arg img=1 --build-arg rsvg=1
#   Debian buster based, without Inkscape, with ImageMagick and rsvg-convert
# o --build-arg rel=buster --build-arg ink=0 --build-arg img=1
#   Without Inkscape, with ImageMagick, without rsvg-convert
#   Note: In this combination, convert(1) fails due to lack of rsvg-convert(1).
# o --build-arg ink=0 --build-arg img=1 --build-arg rsvg=1
# o --build-arg ink=0 --build-arg img=1 --build-arg rsvg=0
# o --build-arg cjk=0
#   Without Noto CJK fonts
ARG rel=bullseye
FROM debian:$rel-slim
ARG rel
ENV REL $rel
RUN apt-get update && apt-get upgrade -y && apt-get install -y locales && \
    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*
ENV LANG en_US.utf8
RUN apt-get update && DEBIAN_FRONTEND=noninteractive TZ=UTC apt-get install -y tzdata && \
    rm -rf /var/lib/apt/lists/*
RUN apt-get update && \
    apt-get install -y perl-modules \
    fonts-dejavu fonts-texgyre fonts-liberation \
    make && \
    apt-get install -y --no-install-recommends texlive-lang-chinese \
    texlive-xetex texlive-fonts-recommended tex-gyre graphviz dvipng \
    python3-venv latexmk && \
    rm -rf /var/lib/apt/lists/*
ARG cjk=1
RUN if [ $cjk -ne 0 ] ; then \
    apt-get update && \
    apt-get install -y --no-install-recommends fonts-noto-cjk && \
    rm -rf /var/lib/apt/lists/* ; \
    fi
ARG ink=1
RUN if [ $ink -ne 0 ] ; then \
    apt-get update && \
    apt-get install -y --no-install-recommends inkscape && \
    rm -rf /var/lib/apt/lists/* ; \
    fi
ARG img=0
RUN if [ $img -ne 0 ] ; then \
    apt-get update && \
    apt-get install -y --no-install-recommends imagemagick && \
    rm -rf /var/lib/apt/lists/* && \
    cd /etc/ImageMagick-6 && sed -i 's+policy domain="coder" rights="none" pattern="PDF"+policy domain="coder" rights="read|write" pattern="PDF"+' policy.xml ; \
    fi
ARG rsvg=0
RUN if [ $rsvg -ne 0 ] ; then \
    apt-get update && \
    apt-get install -y --no-install-recommends librsvg2-bin && \
    rm -rf /var/lib/apt/lists/* ; \
    fi
RUN if [ "$REL" = "bullseye" -o "$REL" = "sid" ] ; then \
      if [ -e /usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf ] ; then \
        cd /usr/local/share/texmf && \
        mkdir fonts && cd fonts && \
        mv /usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf . && \
        fc-cache -s ; \
      fi ; \
    fi
COPY sarasa-mono-k-regular.ttf sarasa-mono-k-bold.ttf sarasa-mono-k-italic.ttf sarasa-mono-k-bolditalic.ttf /usr/local/share/fonts/
RUN fc-cache /usr/local/share/fonts/
COPY requirements-latest.txt requirements.txt requirements-1.7.9.txt /opt/
ARG uid=0
ARG gid=0
ARG user=kerneldoc
ARG group=kerneldoc
RUN if [ $uid -ne 0 ] ; then \
    groupadd -g $gid $group ; \
    useradd -u $uid -g $gid -m $user ; \
    fi
USER $uid:$gid
WORKDIR /home/kerneldoc
RUN /usr/bin/python3 -m venv sphinx_1.7.9 && \
    . sphinx_1.7.9/bin/activate && \
    pip install --upgrade pip && \
    pip install -r /opt/requirements-1.7.9.txt && \
    deactivate
RUN /usr/bin/python3 -m venv sphinx_2.4.4 && \
    . sphinx_2.4.4/bin/activate && \
    pip install --upgrade pip && \
    pip install -r /opt/requirements.txt && \
    deactivate
RUN /usr/bin/python3 -m venv sphinx_latest && \
    . sphinx_latest/bin/activate && \
    pip install --upgrade pip && \
    pip install -r /opt/requirements-latest.txt && \
    deactivate
VOLUME /work
WORKDIR /work
CMD /bin/bash
